{"version":3,"sources":["components/filter.js","components/notification.jsx","components/personForm.js","components/persons.js","services/phoneServices.js","App.js","index.js"],"names":["filter","persons","setPersonsToShow","searcher","setSearcher","value","onChange","e","newSearcher","target","newPersonsToShow","Boolean","person","RegExp","test","name","Notification","message","type","className","content","personForm","submitName","newName","nameHandler","newNumber","numberHandler","onSubmit","personsToShow","deletePerson","map","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","emptyMessage","setMessage","useEffect","phoneServices","clear","clearMessageAfter","second","setTimeout","preventDefault","newGuy","values","window","confirm","p","catch","err","console","log","newPersons","res","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.603925e2.chunk.js","sourcesContent":["import React from 'react'\n\nconst filter = ({\n  persons,\n  setPersonsToShow,\n  searcher,\n  setSearcher\n}) => {\n\n\n  const searcherHandler = (e) => {\n    const newSearcher = e.target.value\n    setSearcher(newSearcher)\n    const isSercherEmpty = !Boolean(newSearcher)\n    const newPersonsToShow = isSercherEmpty\n      ? persons\n      : persons.filter(person => new RegExp(`${newSearcher}`, 'ig').test(person.name))\n\n    setPersonsToShow(newPersonsToShow)\n  }\n\n  return (\n    <div>filter shown with: <input value={searcher} onChange={searcherHandler} /></div>\n  )\n}\n\nexport default filter","const Notification = ({ message }) => {\n  if (message.type === '') return null\n\n  if (message.type === 'success') {\n    return (\n      <div className='message success'>{message.content}</div>\n    )\n  }\n\n  if (message.type === 'error') {\n    return (\n      <div className='message error'>{message.content}</div>\n    )\n  }\n}\n\nexport default Notification\n","import React from 'react'\nimport Notification from './notification'\nconst personForm = ({\n  submitName,\n  newName,\n  nameHandler,\n  newNumber,\n  numberHandler,\n  message\n}) => {\n  return (\n    <>\n      <Notification message={message} />\n      <form onSubmit={submitName}>\n        <div>name: <input value={newName} onChange={nameHandler} /></div>\n        <div>number: <input value={newNumber} onChange={numberHandler} /></div>\n        <div><button type='submit'>add</button></div>\n      </form>\n    </>\n  )\n}\n\nexport default personForm\n","import React from 'react'\n\nconst persons = ({\n  personsToShow,\n  deletePerson\n}) => {\n  return (\n    <>\n      {\n        personsToShow.map((person) => {\n          return (\n            <div key={person.name}>\n              {person.name}&nbsp;&nbsp;\n              {person.number}&nbsp;&nbsp;\n              <button onClick={() => deletePerson(person.id)}>delete</button>\n            </div>\n          )\n        })\n      }\n    </>\n  )\n}\n\nexport default persons\n","import axios from 'axios'\nconst baseUrl = 'https://ky-phone-book.herokuapp.com/api/persons'\n\nconst getAllContacts = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst createContacts = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst updateContacts = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteContacts = id => axios.delete(`${baseUrl}/${id}`)\n\nexport default {\n  getAllContacts,\n  createContacts,\n  updateContacts,\n  deleteContacts\n}\n","import React, { useState, useEffect } from 'react'\nimport Filter from './components/filter'\nimport PersonForm from './components/personForm'\nimport Persons from './components/persons'\nimport './App.css'\n\nimport phoneServices from './services/phoneServices'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n\n  const [searcher, setSearcher] = useState('')\n\n  const [personsToShow, setPersonsToShow] = useState(persons)\n\n  const [newName, setNewName] = useState('')\n\n  const [newNumber, setNewNumber] = useState('')\n\n  const emptyMessage = { type: '', content: '' }\n\n  const [message, setMessage] = useState(emptyMessage)\n\n  useEffect(() => {\n    phoneServices.getAllContacts()\n      .then(data => {\n        setPersons(data)\n        setPersonsToShow(data)\n      })\n  }, [])\n\n  const clear = () => {\n    setNewName('')\n    setNewNumber('')\n    setSearcher('')\n  }\n\n  const nameHandler = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const numberHandler = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const clearMessageAfter = (second) => setTimeout(() => { setMessage(emptyMessage) }, second * 1000)\n\n  const deletePerson = id => {\n    const name = persons.filter(person => person.id === id)[0].name\n    if (window.confirm(`Delete ${name}`)) {\n      phoneServices.deleteContacts(id)\n        .then(res => {\n          const newPersons = persons.filter(person => person.id !== id)\n          setPersons(newPersons)\n          setPersonsToShow(newPersons)\n        })\n        .catch(err => {\n          console.log(err)\n          setMessage({\n            type: 'error',\n            content: `Information of ${name} has already been removed from server`\n          })\n          clearMessageAfter(3)\n        })\n    }\n  }\n\n  const submitName = (e) => {\n    e.preventDefault()\n    const newGuy = {\n      name: newName,\n      number: newNumber\n    }\n    // update duplicate person name\n    for (const person of persons.values()) {\n      if (person.name === newName) {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n          phoneServices.updateContacts(person.id, newGuy)\n            .then(data => {\n              setMessage({\n                type: 'success',\n                content: `Updated ${newGuy.name}`\n              })\n              clearMessageAfter(3)\n              setPersons(persons.map(p => p.id !== person.id ? p : data))\n              setPersonsToShow(personsToShow.map(p => p.id !== person.id ? p : data))\n              clear()\n            })\n            .catch(err => {\n              console.log(err)\n              setMessage({\n                type: 'error',\n                content: `Information of ${newGuy.name} has already been removed from server`\n              })\n            })\n        }\n        return\n      }\n    }\n\n    phoneServices.createContacts(newGuy)\n      .then(data => {\n        const newPersons = [\n          ...persons,\n          data\n        ]\n        setMessage({\n          type: 'success',\n          content: `Added ${newGuy.name}`\n        })\n        clearMessageAfter(3)\n        setPersons(newPersons)\n        // reset searcher after add new person\n        setPersonsToShow(newPersons)\n        clear()\n      })\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Filter\n        persons={persons}\n        setPersonsToShow={setPersonsToShow}\n        searcher={searcher}\n        setSearcher={setSearcher}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        submitName={submitName}\n        newName={newName}\n        nameHandler={nameHandler}\n        newNumber={newNumber}\n        numberHandler={numberHandler}\n        message={message}\n      />\n\n      <h2>Numbers</h2>\n      <Persons\n        personsToShow={personsToShow}\n        deletePerson={deletePerson}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}